openapi: 3.1.0
info:
  title: Temperature Sensor Hub API
  version: 1.0.0
  description: API for collecting temperature readings from sensors.
servers:
  - url: http://localhost:8080
paths:
  /sensors/temperature:
    get:
      summary: Get temperature readings from all sensors
      operationId: getAllTemperatureReadings
      responses:
        '200':
          description: A list of temperature readings from all sensors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SensorReading'
        '500':
          description: Error collecting readings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /sensors/temperature/{sensorName}:
    get:
      summary: Get temperature reading for a specific sensor
      operationId: getTemperatureReadingBySensor
      parameters:
        - name: sensorName
          in: path
          required: true
          schema:
            type: string
          description: The name of the sensor
      responses:
        '200':
          description: Temperature reading for the specified sensor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensorReading'
        '400':
          description: Error retrieving reading for sensor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /readings/between:
    get:
      summary: Get temperature readings between two dates
      operationId: getReadingsBetweenDates
      parameters:
        - name: start
          in: query
          required: true
          schema:
            type: string
            format: date
          description: Start date (YYYY-MM-DD)
        - name: end
          in: query
          required: true
          schema:
            type: string
            format: date
          description: End date (YYYY-MM-DD)
      responses:
        '200':
          description: Temperature readings between dates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SensorReading'
        '400':
          description: Invalid date range or error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    SensorReading:
      type: object
      properties:
        sensor_name:
          type: string
        reading:
          type: object
          properties:
            temperature:
              type: number
              format: float
            time:
              type: string
              format: date-time
    ErrorResponse:
      type: object
      properties:
        message:
          type: string